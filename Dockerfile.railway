# Multi-stage build for Railway single-service deployment
FROM node:18-alpine AS frontend-builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY postcss.config.js ./
COPY tailwind.config.js ./
COPY tsconfig*.json ./
COPY vite.config.ts ./

# Install dependencies including devDependencies for build
RUN npm ci

# Copy source code
COPY src/ ./src/
COPY index.html ./
COPY eslint.config.js ./
COPY public/ ./public/

# Build the frontend
RUN npm run build

# Production stage
FROM node:18-alpine AS production

# Install build dependencies for sharp
RUN apk add --no-cache \
    libc6-compat \
    vips-dev \
    build-base \
    python3 \
    make \
    g++

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install ALL dependencies (not just production) to ensure sharp builds correctly
RUN npm ci

# Create the backend directory structure
RUN mkdir -p backend

# Copy the built frontend from builder stage
COPY --from=frontend-builder /app/dist ./dist

# Copy the backend server file to the correct location
COPY backend/server.js ./backend/server.js

# Copy any other necessary files
COPY .env* ./

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

# Change ownership of the app directory
RUN chown -R nodejs:nodejs /app

USER nodejs
EXPOSE 3000
ENV NODE_ENV=production
ENV PORT=3000

# Start the application
CMD ["node", "backend/server.js"]